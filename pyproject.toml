[project]
name = "voxel"
description = "Python Library for building SPIM software"
authors = [
    { name = "Micah Woodard", email = "micah.woodard@alleninstitute.org" },
    { name = "Adam Glaser", email = "adam.glaser@alleninstitute.org" },
    { name = "Walter Mwaniki", email = "walter.mwaniki@alleninstitute.org" },
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
keywords = ["microscopy", "light-sheet", "lightsheet", "microscope", "imaging"]
version = "0.1.0"
dependencies = [
    # core
    "numpy>=2.1.2",
    "matplotlib>=3.9.2",
    "pydantic>=2.9.2",
    "ruamel-yaml >= 0.18.5",
    # hardware
    "nidaqmx>=1.0.1",
    "pyserial >= 3.5",
    "pyusb >= 1.2.1",
    "PyVISA-py >= 0.7.2",
    "tigerasi >= 0.0.26",
    # files
    "imohash>=1.1.0",
    "tifffile>=2024.9.20",
    # processing
    "gputools >= 0.2.14",
    "fast-histogram >= 0.14",
    # utils
    "sympy >= 1.12.1",
    "ome-types>=0.5.3",
    "jax>=0.4.35",
    "tensorstore>=0.1.68",
    "cupy>=13.3.0",
    "torch>=2.4.1",
    "pyimariswriter>=0.7.0",
    "psutil>=6.1.0",
]

[project.optional-dependencies]
bdv = ["h5py>=3.12.1", "tqdm>=4.66.5"]
imaris = ["pyimariswriter>=0.7.0"]
aaopto = ["aaopto-aotf>=0.0.11"]
thorlabs = ["pylablib>=1.4.2"]
cobolt = ["pycobolt @ git+https://github.com/cobolt-lasers/pycobolt.git"]
coherent = [
    "coherent_lasers @ git+https://github.com/AllenNeuralDynamics/coherent_lasers.git",
]
vortran = [
    "vortran_laser @ git+https://github.com/AllenNeuralDynamics/vortran_laser.git",
]
oxxius = [
    "oxxius_laser @ git+https://github.com/AllenNeuralDynamics/oxxius_laser.git",
]
# obis = ["obis_laser @ git+https://github.com/AllenNeuralDynamics/obis-laser.git"]

[dependency-groups]
dev = ["pytest>=8.3.3", "ruff>=0.8.0"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

# [build-system]
# requires = ["setuptools", "setuptools-scm"]
# build-backend = "setuptools.build_meta"

# [tool.setuptools]
# package-dir = { "" = "src" }
# packages = ["voxel"]

[tool.ruff]
line-length = 120
show-fixes = true

target-version = "py311"

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".gitignore",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
extend-select = ["C4", "SIM", "TCH"]
fixable = ["ALL"]
