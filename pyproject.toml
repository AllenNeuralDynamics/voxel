[project]
name = "voxel"
description = "A python package for generalized microscope control"
license = { file = "LICENSE" }
requires-python = ">=3.10, <=3.12"
authors = [
    { name = "Micah Woodard", email = "micah.woodard@alleninstitute.org" },
    { name = "Adam Glaser", email = "adam.glaser@alleninstitute.org" },
    { name = "Walter Mwaniki", email = "walter.mwaniki@alleninstitute.org" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
readme = "README.md"
keywords = [
    "microscopy",
    "microscope",
    "acquisition",
    "imaging",
]
dynamic = ["version"]

dependencies = [
    "ruamel-yaml>=0.18.5",
    "inflection>=0.5.1",
    "pydantic>=2.7.3",
    "imohash>=1.0.5",
    "numpy>=2.1",
    # device driver dependencies
    "pyserial>=3.5",
    "pyusb>=1.2.1",
    "psutil>=5.9.8",
    "PyVISA>=1.14.1",
    "PyVISA-py>=0.7.2",
    "pylablib>=1.4.2",
    "nidaqmx>=0.9.0",
    # data handling dependencies
    "h5py>=3.0.0",
    # processing and utils dependencies
    "pyclesperanto>=0.8.2",
    "scikit-image>=0.20.0",
    "gputools>0.2.14",
    "tensorstore>=0.1.56",
    "matplotlib>=3.8.2",
    "scipy>=1.12.0",
    "fast_histogram>=0.14",
    "sympy>=1.12.1",
    "numpy>2.0.0",
    "siphash24>=1.7",
]


[project.optional-dependencies]
imaris-writer = ["PyImarisWriter>=0.7.0"]
tifffile-writer = ["tifffile>=2024.1.30"]
acquire-zarr-writer = ["acquire-zarr>=0.0.5"]
pycobolt-laser = ["pycobolt @ git+https://github.com/cobolt-lasers/pycobolt.git"]
coherent-laser = ["coherent-lasers @ https://github.com/AllenNeuralDynamics/coherent-lasers/releases/download/v0.1.0/coherent_lasers-0.1.0-py3-none-any.whl"]
vortran-laser = ["vortran_laser @ git+https://github.com/AllenNeuralDynamics/vortran_laser.git"]
oxxius-laser = ["oxxius_laser @ git+https://github.com/AllenNeuralDynamics/oxxius_laser.git"]
obis-laser = ["obis_laser @ git+https://github.com/AllenNeuralDynamics/obis-laser.git"]
egrabber-camera = ["egrabber @ https://github.com/adamkglaser/egrabber-python/releases/download/v24.09.0.5/egrabber-24.09.0.5-py2.py3-none-any.whl"]
pco-camera = ["pco"]
ximea-camera = ["ximea-python @ https://github.com/adamkglaser/ximea-python/releases/download/v4.29.10/ximea_python-4.29.10-py3-none-any.whl"]
optokummenberg-etl = ["optokummenberg @https://github.com/adamkglaser/optotune-icc4c/releases/download/v2.0.4922/optoKummenberg-1.0.4894-py3-none-any.whl"]
optoicc-etl = ["optoicc @https://github.com/adamkglaser/optotune-icc4c/releases/download/v2.0.4922/optoICC-2.0.4922-py3-none-any.whl"]
tigerasi-controller = ["tigerasi"]
scikit-tensor = ["scikit-tensor-py3 @ https://github.com/adamkglaser/scikit-tensor-py3/releases/download/v0.1.0/scikit_tensor_py3-0.4.1-py3-none-any.whl"]

dev = [
    "pytest>=8.2.1",
    "black",
    "coverage",
    "flake8",
    "interrogate",
    "isort",
    "Sphinx",
    "furo",
]
all = [
    "voxel[imaris-writer]",
    "voxel[tifffile-writer]",
    "voxel[acquire-zarr-writer]",
    "voxel[pycobolt-laser]",
    "voxel[coherent-laser]",
    "voxel[vortran-laser]",
    "voxel[oxxius-laser]",
    "voxel[obis-laser]",
    "voxel[egrabber-camera]",
    "voxel[pco-camera]",
    "voxel[ximea-camera]",
    "voxel[optokummenberg-etl]",
    "voxel[optoicc-etl]",
    "voxel[tigerasi-controller]",
    "voxel[scikit-tensor]",
    "voxel[dev]",
]

[project.urls]
"Homepage" = "https://github.com/AllenNeuralDynamics/voxel"
"Issues" = "https://github.com/AllenNeuralDynamics/voxel/issues"

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }
packages = ["voxel"]

[tool.setuptools.dynamic]
version = { attr = "voxel.__version__" }

[tool.black]
line-length = 120
target-version = ["py311"]
exclude = '''
(
    /(
        \.eggs         # exclude a few common directories in the
      | \.git          # root of the project
      | \.hg
      | \.mypy_cache
      | \.tox
      | \.venv
      | _build
      | build
      | dist
    )/
    | .gitignore
)
'''

[tool.coverage.run]
omit = ["*__init__*"]
source = ["voxel", "tests"]

[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "from",
    "import",
    "pragma: no cover",
]
fail_under = 100

[tool.isort]
line_length = 120
profile = "black"

[tool.interrogate]
exclude = ["setup.py", "docs", "build"]
fail_under = 100
